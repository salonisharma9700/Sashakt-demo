{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salon\\\\OneDrive\\\\Documents\\\\sashakt\\\\src\\\\watchvid\\\\vidplay\\\\Video1W.js\";\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import \"./play.css\"\n\n// const Watch = () => {\n//   return (\n//     <div className='video1'>\n//       <iframe\n//         className='vid-iframe'\n//         width=\"900\"\n//         height=\"450\"\n//         src=\"https://www.youtube.com/embed/HCYLdtug8sk\"  // Use the embed URL\n//         title=\"YouTube video player\"\n//         // frameBorder=\"0\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n//         allowFullScreen\n//       ></iframe>\n//       <ul className='vid-ul'>\n//         <Link to=\"/watchQuiz1\">\n//           <button className=\"vid-start-button\">Start Quiz</button>\n//         </Link>\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default Watch;\n\n// // import React, { useEffect } from 'react';\n// // import { Link } from 'react-router-dom';\n// // import './play.css';\n\n// // const Watch = () => {\n// //   useEffect(() => {\n// //     const iframe = document.querySelector('.vid-iframe');\n\n// //     // Listen for the 'onStateChange' event to detect when the video ends\n// //     const onPlayerStateChange = (event) => {\n// //       if (event.data === window.YT.PlayerState.ENDED) {\n// //         // Video has ended, you can trigger the display of the quiz or redirect to the quiz page\n// //         console.log('Video ended, display quiz or redirect to quiz page');\n// //         // Example: Redirect to the quiz page\n// //         window.location.href = '/watchQuiz1';\n// //       }\n// //     };\n\n// //     // Initialize the YouTube Player API\n// //     const player = new window.YT.Player(iframe, {\n// //       events: {\n// //         onStateChange: onPlayerStateChange,\n// //       },\n// //     });\n\n// //     // Clean up the player when the component unmounts\n// //     return () => {\n// //       player.destroy();\n// //     };\n// //   }, []);\n\n// //   return (\n// //     <div className='video1'>\n// //       <iframe\n// //         className='vid-iframe'\n// //         width=\"900\"\n// //         height=\"450\"\n// //         src=\"https://www.youtube.com/embed/HCYLdtug8sk\"\n// //         title=\"YouTube video player\"\n// //         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n// //         allowFullScreen\n// //       ></iframe>\n// //     </div>\n// //   );\n// // };\n\n// // export default Watch;\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport YouTube from 'react-youtube';\nimport './play.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watch = () => {\n  const onVideoEnd = () => {\n    // Video has ended, you can trigger the display of the quiz or redirect to the quiz page\n    console.log('Video ended, display quiz or redirect to quiz page');\n    window.location.href = '/watchQuiz1';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video1\",\n    children: /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: \"HCYLdtug8sk\",\n      opts: {\n        width: '900',\n        height: '450',\n        playerVars: {\n          autoplay: 1\n        }\n      },\n      onEnd: onVideoEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_c = Watch;\nexport default Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","Link","YouTube","jsxDEV","_jsxDEV","Watch","onVideoEnd","console","log","window","location","href","className","children","videoId","opts","width","height","playerVars","autoplay","onEnd","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/salon/OneDrive/Documents/sashakt/src/watchvid/vidplay/Video1W.js"],"sourcesContent":["// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import \"./play.css\"\r\n\r\n// const Watch = () => {\r\n//   return (\r\n//     <div className='video1'>\r\n//       <iframe\r\n//         className='vid-iframe'\r\n//         width=\"900\"\r\n//         height=\"450\"\r\n//         src=\"https://www.youtube.com/embed/HCYLdtug8sk\"  // Use the embed URL\r\n//         title=\"YouTube video player\"\r\n//         // frameBorder=\"0\"\r\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n//         allowFullScreen\r\n//       ></iframe>\r\n//       <ul className='vid-ul'>\r\n//         <Link to=\"/watchQuiz1\">\r\n//           <button className=\"vid-start-button\">Start Quiz</button>\r\n//         </Link>\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Watch;\r\n\r\n// // import React, { useEffect } from 'react';\r\n// // import { Link } from 'react-router-dom';\r\n// // import './play.css';\r\n\r\n// // const Watch = () => {\r\n// //   useEffect(() => {\r\n// //     const iframe = document.querySelector('.vid-iframe');\r\n\r\n// //     // Listen for the 'onStateChange' event to detect when the video ends\r\n// //     const onPlayerStateChange = (event) => {\r\n// //       if (event.data === window.YT.PlayerState.ENDED) {\r\n// //         // Video has ended, you can trigger the display of the quiz or redirect to the quiz page\r\n// //         console.log('Video ended, display quiz or redirect to quiz page');\r\n// //         // Example: Redirect to the quiz page\r\n// //         window.location.href = '/watchQuiz1';\r\n// //       }\r\n// //     };\r\n\r\n// //     // Initialize the YouTube Player API\r\n// //     const player = new window.YT.Player(iframe, {\r\n// //       events: {\r\n// //         onStateChange: onPlayerStateChange,\r\n// //       },\r\n// //     });\r\n\r\n// //     // Clean up the player when the component unmounts\r\n// //     return () => {\r\n// //       player.destroy();\r\n// //     };\r\n// //   }, []);\r\n\r\n// //   return (\r\n// //     <div className='video1'>\r\n// //       <iframe\r\n// //         className='vid-iframe'\r\n// //         width=\"900\"\r\n// //         height=\"450\"\r\n// //         src=\"https://www.youtube.com/embed/HCYLdtug8sk\"\r\n// //         title=\"YouTube video player\"\r\n// //         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n// //         allowFullScreen\r\n// //       ></iframe>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Watch;\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport YouTube from 'react-youtube';\r\nimport './play.css';\r\n\r\nconst Watch = () => {\r\n  const onVideoEnd = () => {\r\n    // Video has ended, you can trigger the display of the quiz or redirect to the quiz page\r\n    console.log('Video ended, display quiz or redirect to quiz page');\r\n    window.location.href = '/watchQuiz1';\r\n  };\r\n\r\n  return (\r\n    <div className='video1'>\r\n      <YouTube\r\n        videoId=\"HCYLdtug8sk\"\r\n        opts={{\r\n          width: '900',\r\n          height: '450',\r\n          playerVars: {\r\n            autoplay: 1,\r\n          },\r\n        }}\r\n        onEnd={onVideoEnd}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watch;\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB;IACAC,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;IACjEC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,aAAa;EACtC,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBT,OAAA,CAACF,OAAO;MACNY,OAAO,EAAC,aAAa;MACrBC,IAAI,EAAE;QACJC,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE,KAAK;QACbC,UAAU,EAAE;UACVC,QAAQ,EAAE;QACZ;MACF,CAAE;MACFC,KAAK,EAAEd;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAtBIpB,KAAK;AAwBX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}