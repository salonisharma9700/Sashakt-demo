{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salon\\\\OneDrive\\\\Documents\\\\sashakt\\\\src\\\\watchvid\\\\vidplay\\\\WQuiz2.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import './play.css'; // Make sure to replace with the correct CSS file\n\n// function Quiz2() {\n//   const [showFinalResults, setFinalResults] = useState(false);\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [score, setScore] = useState(0);\n//   const [selectedOption, setSelectedOption] = useState(null);\n\n//   const questions = [\n//     {\n//                   text: \"How many child rights are there?\",\n//                   options: [\n\n//                    { id:0, text:\"12\", isCorrect: true },\n//                    { id:0, text:\"10\", isCorrect: false },\n//                    { id:0, text:\"8\", isCorrect: false },\n//                    { id:0, text:\"16\", isCorrect: false },\n//                   ],\n//                 },\n//                 {\n//                   text: \"if any bad touch ur feeling what should you do?\",\n//                   options: [\n\n//                    { id:0, text:\"crying\", isCorrect: false },\n//                    { id:0, text:\"raise the issue\", isCorrect: false },\n//                    { id:0, text:\"tell to mother\", isCorrect: true },\n//                    { id:0, text:\"silent\", isCorrect: false },\n//                   ],\n//                 },\n//                 {\n//                   text: \"what are good habits?\",\n//                   options: [\n\n//                    { id:0, text:\"helping\", isCorrect: true },\n//                    { id:0, text:\"over sleep\", isCorrect: false },\n//                    { id:0, text:\"crying\", isCorrect: false },\n//                    { id:0, text:\"fighting\", isCorrect: false },\n//                   ],\n//                 },\n//                 {\n//                   text: \"helpline number for child rights?\",\n//                   options: [\n\n//                    { id:0, text:\"7698 938 893\", isCorrect: false },\n//                    { id:0, text:\"123 793 0933\", isCorrect: false },\n//                    { id:0, text:\"31 20 528 9050.\", isCorrect: true },\n//                    { id:0, text:\"798 709 9031\", isCorrect: false },\n//                   ],\n//                 },\n//                 {\n//                   text: \"what are important in life?\",\n//                   options: [\n\n//                    { id:0, text:\"studing\", isCorrect: false },\n//                    { id:0, text:\"sleeping\", isCorrect: false },\n//                    { id:0, text:\"eating well\", isCorrect: false },\n//                    { id:0, text:\"a and b\", isCorrect: true },\n//                   ],\n//                 },\n//   ];\n\n//   const optionClicked = (isCorrect) => {\n//     if (selectedOption !== null) {\n//       if (isCorrect) {\n//         setScore(score + 1);\n//       }\n//       if (currentQuestion + 1 < questions.length) {\n//         setCurrentQuestion(currentQuestion + 1);\n//         setSelectedOption(null); // Reset selected option for the next question\n//       } else {\n//         setFinalResults(true);\n//       }\n//     }\n//   };\n\n//   const restartGame = () => {\n//     setScore(0);\n//     setCurrentQuestion(0);\n//     setFinalResults(false);\n//     setSelectedOption(null);\n//   };\n\n// return (\n//   <div className=\"vid-quiz-app\">\n//     <h1>Child Rights Quiz</h1>\n\n//     {showFinalResults ? (\n//       <div className=\"vid-quiz-final-result\">\n//         <h1>Final Result</h1>\n//         <h2>\n//           {score} out of {questions.length} correct - (\n//           {(score / questions.length) * 100}%)\n//         </h2>\n//         <button\n//           className=\"vid-quiz-restart-button\"\n//           onClick={() => restartGame()}\n//         >\n//           Restart Quiz\n//         </button>\n//       </div>\n//     ) : (\n//       <div className=\"vid-quiz-questions-card\">\n//         <h2>\n//           Question {currentQuestion + 1} out of {questions.length}\n//         </h2>\n//         <h3 className=\"vid-quiz-question-text\">\n//           {questions[currentQuestion].text}\n//         </h3>\n\n//         <form>\n//           {questions[currentQuestion].options.map((option) => (\n//             <div key={option.id} className=\"vid-quiz-radio-option\">\n//               <input\n//                 type=\"radio\"\n//                 id={`vid-quiz-option${option.id}`}\n//                 name=\"vid-quiz-option\"\n//                 onClick={() => optionClicked(option.isCorrect)}\n//               />\n//               <label htmlFor={`vid-quiz-option${option.id}`}>\n//                 {option.text}\n//               </label>\n//             </div>\n//           ))}\n//         </form>\n//         <button\n//           className=\"vid-quiz-submit-button\"\n//           onClick={() => optionClicked(false)}\n//         >\n//           Next\n//         </button>\n//       </div>\n//     )}\n//   </div>\n// );\n// }\n\n// export default Quiz2;\n\nimport React, { useState } from \"react\";\nimport './play.css'; // Make sure to replace with the correct CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz2() {\n  _s();\n  const [showFinalResults, setFinalResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const questions = [{\n    text: \"How many child rights are there?\",\n    options: [{\n      id: 0,\n      text: \"12\",\n      isCorrect: true\n    }, {\n      id: 1,\n      text: \"10\",\n      isCorrect: false\n    }, {\n      id: 2,\n      text: \"8\",\n      isCorrect: false\n    }, {\n      id: 3,\n      text: \"16\",\n      isCorrect: false\n    }]\n  }\n  // ... (rest of the questions)\n  ];\n  const optionClicked = isCorrect => {\n    if (selectedOption !== null) {\n      if (isCorrect) {\n        setScore(score + 1);\n      }\n      if (currentQuestion + 1 < questions.length) {\n        setCurrentQuestion(currentQuestion + 1);\n        setSelectedOption(null); // Reset selected option for the next question\n      } else {\n        setFinalResults(true);\n      }\n    }\n  };\n  const restartGame = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setFinalResults(false);\n    setSelectedOption(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vid-quiz-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Child Rights Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), showFinalResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vid-quiz-final-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Final Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [score, \" out of \", questions.length, \" correct - (\", score / questions.length * 100, \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"vid-quiz-restart-button\",\n        onClick: () => restartGame(),\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vid-quiz-questions-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question \", currentQuestion + 1, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"vid-quiz-question-text\",\n        children: questions[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: questions[currentQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vid-quiz-radio-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `vid-quiz-option-${option.id}`,\n            name: \"vid-quiz-option\",\n            checked: selectedOption === option.id,\n            onChange: () => setSelectedOption(option.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `vid-quiz-option-${option.id}`,\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"vid-quiz-submit-button\",\n        onClick: () => {\n          var _questions$currentQue;\n          return optionClicked((_questions$currentQue = questions[currentQuestion].options[selectedOption]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.isCorrect);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz2, \"eC8s85nfR4pacKJEHZBz8ofjAMA=\");\n_c = Quiz2;\nexport default Quiz2;\nvar _c;\n$RefreshReg$(_c, \"Quiz2\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz2","_s","showFinalResults","setFinalResults","currentQuestion","setCurrentQuestion","score","setScore","selectedOption","setSelectedOption","questions","text","options","id","isCorrect","optionClicked","length","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","option","type","name","checked","onChange","htmlFor","_questions$currentQue","_c","$RefreshReg$"],"sources":["C:/Users/salon/OneDrive/Documents/sashakt/src/watchvid/vidplay/WQuiz2.js"],"sourcesContent":["\r\n\r\n// import React, { useState } from \"react\";\r\n// import './play.css'; // Make sure to replace with the correct CSS file\r\n\r\n// function Quiz2() {\r\n//   const [showFinalResults, setFinalResults] = useState(false);\r\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\r\n//   const [score, setScore] = useState(0);\r\n//   const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n//   const questions = [\r\n//     {\r\n//                   text: \"How many child rights are there?\",\r\n//                   options: [\r\n                    \r\n//                    { id:0, text:\"12\", isCorrect: true },\r\n//                    { id:0, text:\"10\", isCorrect: false },\r\n//                    { id:0, text:\"8\", isCorrect: false },\r\n//                    { id:0, text:\"16\", isCorrect: false },\r\n//                   ],\r\n//                 },\r\n//                 {\r\n//                   text: \"if any bad touch ur feeling what should you do?\",\r\n//                   options: [\r\n                    \r\n//                    { id:0, text:\"crying\", isCorrect: false },\r\n//                    { id:0, text:\"raise the issue\", isCorrect: false },\r\n//                    { id:0, text:\"tell to mother\", isCorrect: true },\r\n//                    { id:0, text:\"silent\", isCorrect: false },\r\n//                   ],\r\n//                 },\r\n//                 {\r\n//                   text: \"what are good habits?\",\r\n//                   options: [\r\n                    \r\n//                    { id:0, text:\"helping\", isCorrect: true },\r\n//                    { id:0, text:\"over sleep\", isCorrect: false },\r\n//                    { id:0, text:\"crying\", isCorrect: false },\r\n//                    { id:0, text:\"fighting\", isCorrect: false },\r\n//                   ],\r\n//                 },\r\n//                 {\r\n//                   text: \"helpline number for child rights?\",\r\n//                   options: [\r\n                    \r\n//                    { id:0, text:\"7698 938 893\", isCorrect: false },\r\n//                    { id:0, text:\"123 793 0933\", isCorrect: false },\r\n//                    { id:0, text:\"31 20 528 9050.\", isCorrect: true },\r\n//                    { id:0, text:\"798 709 9031\", isCorrect: false },\r\n//                   ],\r\n//                 },\r\n//                 {\r\n//                   text: \"what are important in life?\",\r\n//                   options: [\r\n                    \r\n//                    { id:0, text:\"studing\", isCorrect: false },\r\n//                    { id:0, text:\"sleeping\", isCorrect: false },\r\n//                    { id:0, text:\"eating well\", isCorrect: false },\r\n//                    { id:0, text:\"a and b\", isCorrect: true },\r\n//                   ],\r\n//                 },\r\n//   ];\r\n\r\n//   const optionClicked = (isCorrect) => {\r\n//     if (selectedOption !== null) {\r\n//       if (isCorrect) {\r\n//         setScore(score + 1);\r\n//       }\r\n//       if (currentQuestion + 1 < questions.length) {\r\n//         setCurrentQuestion(currentQuestion + 1);\r\n//         setSelectedOption(null); // Reset selected option for the next question\r\n//       } else {\r\n//         setFinalResults(true);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const restartGame = () => {\r\n//     setScore(0);\r\n//     setCurrentQuestion(0);\r\n//     setFinalResults(false);\r\n//     setSelectedOption(null);\r\n//   };\r\n\r\n// return (\r\n//   <div className=\"vid-quiz-app\">\r\n//     <h1>Child Rights Quiz</h1>\r\n\r\n//     {showFinalResults ? (\r\n//       <div className=\"vid-quiz-final-result\">\r\n//         <h1>Final Result</h1>\r\n//         <h2>\r\n//           {score} out of {questions.length} correct - (\r\n//           {(score / questions.length) * 100}%)\r\n//         </h2>\r\n//         <button\r\n//           className=\"vid-quiz-restart-button\"\r\n//           onClick={() => restartGame()}\r\n//         >\r\n//           Restart Quiz\r\n//         </button>\r\n//       </div>\r\n//     ) : (\r\n//       <div className=\"vid-quiz-questions-card\">\r\n//         <h2>\r\n//           Question {currentQuestion + 1} out of {questions.length}\r\n//         </h2>\r\n//         <h3 className=\"vid-quiz-question-text\">\r\n//           {questions[currentQuestion].text}\r\n//         </h3>\r\n\r\n//         <form>\r\n//           {questions[currentQuestion].options.map((option) => (\r\n//             <div key={option.id} className=\"vid-quiz-radio-option\">\r\n//               <input\r\n//                 type=\"radio\"\r\n//                 id={`vid-quiz-option${option.id}`}\r\n//                 name=\"vid-quiz-option\"\r\n//                 onClick={() => optionClicked(option.isCorrect)}\r\n//               />\r\n//               <label htmlFor={`vid-quiz-option${option.id}`}>\r\n//                 {option.text}\r\n//               </label>\r\n//             </div>\r\n//           ))}\r\n//         </form>\r\n//         <button\r\n//           className=\"vid-quiz-submit-button\"\r\n//           onClick={() => optionClicked(false)}\r\n//         >\r\n//           Next\r\n//         </button>\r\n//       </div>\r\n//     )}\r\n//   </div>\r\n// );\r\n// }\r\n\r\n// export default Quiz2;\r\n\r\nimport React, { useState } from \"react\";\r\nimport './play.css'; // Make sure to replace with the correct CSS file\r\n\r\nfunction Quiz2() {\r\n  const [showFinalResults, setFinalResults] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const questions = [\r\n    {\r\n      text: \"How many child rights are there?\",\r\n      options: [\r\n        { id: 0, text: \"12\", isCorrect: true },\r\n        { id: 1, text: \"10\", isCorrect: false },\r\n        { id: 2, text: \"8\", isCorrect: false },\r\n        { id: 3, text: \"16\", isCorrect: false },\r\n      ],\r\n    },\r\n    // ... (rest of the questions)\r\n  ];\r\n\r\n  const optionClicked = (isCorrect) => {\r\n    if (selectedOption !== null) {\r\n      if (isCorrect) {\r\n        setScore(score + 1);\r\n      }\r\n      if (currentQuestion + 1 < questions.length) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n        setSelectedOption(null); // Reset selected option for the next question\r\n      } else {\r\n        setFinalResults(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const restartGame = () => {\r\n    setScore(0);\r\n    setCurrentQuestion(0);\r\n    setFinalResults(false);\r\n    setSelectedOption(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"vid-quiz-app\">\r\n      <h1>Child Rights Quiz</h1>\r\n\r\n      {showFinalResults ? (\r\n        <div className=\"vid-quiz-final-result\">\r\n          <h1>Final Result</h1>\r\n          <h2>\r\n            {score} out of {questions.length} correct - (\r\n            {(score / questions.length) * 100}%)\r\n          </h2>\r\n          <button\r\n            className=\"vid-quiz-restart-button\"\r\n            onClick={() => restartGame()}\r\n          >\r\n            Restart Quiz\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"vid-quiz-questions-card\">\r\n          <h2>\r\n            Question {currentQuestion + 1} out of {questions.length}\r\n          </h2>\r\n          <h3 className=\"vid-quiz-question-text\">\r\n            {questions[currentQuestion].text}\r\n          </h3>\r\n\r\n          <form>\r\n            {questions[currentQuestion].options.map((option) => (\r\n              <div key={option.id} className=\"vid-quiz-radio-option\">\r\n                <input\r\n                  type=\"radio\"\r\n                  id={`vid-quiz-option-${option.id}`}\r\n                  name=\"vid-quiz-option\"\r\n                  checked={selectedOption === option.id}\r\n                  onChange={() => setSelectedOption(option.id)}\r\n                />\r\n                <label htmlFor={`vid-quiz-option-${option.id}`}>\r\n                  {option.text}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </form>\r\n          <button\r\n            className=\"vid-quiz-submit-button\"\r\n            onClick={() =>\r\n              optionClicked(\r\n                questions[currentQuestion].options[selectedOption]?.isCorrect\r\n              )\r\n            }\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz2;\r\n"],"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"},"metadata":{},"sourceType":"module"}