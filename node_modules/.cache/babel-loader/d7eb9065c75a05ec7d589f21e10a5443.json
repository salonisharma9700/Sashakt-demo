{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salon\\\\OneDrive\\\\Documents\\\\sashakt\\\\src\\\\ag2\\\\ag2Games\\\\WordJumble.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './gamag2.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordJumble = ({\n  onScoreChange,\n  onLastWordContentChange\n}) => {\n  _s();\n  const words = [{\n    word: 'CHILDLABOUR',\n    content: 'Hint: Harmful activity of every children'\n  }, {\n    word: 'PARENT',\n    content: 'Hint: Support system of every child'\n  }, {\n    word: 'EDUCATION',\n    content: 'Hint: Process of getting knowledge'\n  }, {\n    word: 'FREEDOM',\n    content: 'Hint: State of being free'\n  }, {\n    word: 'EMPOWERMENT',\n    content: 'Hint: Having power over their own lives'\n  }];\n  const [wordIndex, setWordIndex] = useState(0);\n  const [jumbledWord, setJumbledWord] = useState('');\n  const [guess, setGuess] = useState('');\n  const [score, setScore] = useState(0);\n  const authToken = localStorage.getItem('token');\n  const getRandomWord = () => words[wordIndex];\n  const jumbleWord = word => word.split('').sort(() => Math.random() - 0.5).join('');\n  const handleNewWord = () => {\n    const newWord = getRandomWord();\n    setJumbledWord(jumbleWord(newWord.word));\n    setGuess('');\n    onLastWordContentChange(newWord.content);\n  };\n  const handleGuess = () => {\n    const normalizedGuess = guess.toUpperCase(); // Convert guess to uppercase\n\n    if (normalizedGuess === words[wordIndex].word) {\n      const newScore = score + 1;\n      setScore(newScore);\n      onScoreChange(newScore);\n      setWordIndex(prevIndex => (prevIndex + 1) % words.length);\n      handleNewWord();\n    }\n  };\n  useEffect(() => {\n    handleNewWord();\n  }, [wordIndex]);\n  const storeScore = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/game/jumblescore', {\n        score: score\n      }, {\n        headers: {\n          'auth-token': authToken,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Score saved to the server.');\n    } catch (error) {\n      console.error('Error saving data to server:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-jumble\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WORD JUMBLE GAME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: words[wordIndex].content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbled-word\",\n      children: jumbledWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"word-jumble-inp\",\n        type: \"text\",\n        placeholder: \"Your guess\",\n        value: guess,\n        onChange: e => setGuess(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"jword-but\",\n      onClick: handleGuess,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(WordJumble, \"40BafGODPM1uaWepWMlBdvDbpVQ=\");\n_c = WordJumble;\nconst Scoreboard = ({\n  score,\n  lastWordContent\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jword-score\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"jword-h1\",\n      children: \"Scoreboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"jword-p\",\n      children: [\"Current Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Scoreboard;\nconst App = () => {\n  _s2();\n  const [score, setScore] = useState(0);\n  const [lastWordContent, setLastWordContent] = useState('');\n  const handleScoreChange = newScore => {\n    setScore(newScore);\n  };\n  const handleLastWordContentChange = content => {\n    setLastWordContent(content);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"j-word\",\n    style: {\n      backgroundImage: `url(\"ag2images/homepic2.jpg\")`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jword\",\n      children: [/*#__PURE__*/_jsxDEV(WordJumble, {\n        onScoreChange: handleScoreChange,\n        onLastWordContentChange: handleLastWordContentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Scoreboard, {\n        score: score,\n        lastWordContent: lastWordContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"kYbOwVi+ECv/qrL+AutJ0ucZxAU=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"WordJumble\");\n$RefreshReg$(_c2, \"Scoreboard\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WordJumble","onScoreChange","onLastWordContentChange","_s","words","word","content","wordIndex","setWordIndex","jumbledWord","setJumbledWord","guess","setGuess","score","setScore","authToken","localStorage","getItem","getRandomWord","jumbleWord","split","sort","Math","random","join","handleNewWord","newWord","handleGuess","normalizedGuess","toUpperCase","newScore","prevIndex","length","storeScore","post","headers","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","Scoreboard","lastWordContent","_c2","App","_s2","setLastWordContent","handleScoreChange","handleLastWordContentChange","style","backgroundImage","_c3","$RefreshReg$"],"sources":["C:/Users/salon/OneDrive/Documents/sashakt/src/ag2/ag2Games/WordJumble.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport './gamag2.css';\r\nimport axios from 'axios';\r\n\r\nconst WordJumble = ({ onScoreChange, onLastWordContentChange }) => {\r\n  const words = [\r\n    { word: 'CHILDLABOUR', content: 'Hint: Harmful activity of every children' },\r\n    { word: 'PARENT', content: 'Hint: Support system of every child' },\r\n    { word: 'EDUCATION', content: 'Hint: Process of getting knowledge' },\r\n    { word: 'FREEDOM', content: 'Hint: State of being free' },\r\n    { word: 'EMPOWERMENT', content: 'Hint: Having power over their own lives' },\r\n  ];\r\n\r\n  const [wordIndex, setWordIndex] = useState(0);\r\n  const [jumbledWord, setJumbledWord] = useState('');\r\n  const [guess, setGuess] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const authToken = localStorage.getItem('token');\r\n  const getRandomWord = () => words[wordIndex];\r\n\r\n  const jumbleWord = (word) => word.split('').sort(() => Math.random() - 0.5).join('');\r\n\r\n  const handleNewWord = () => {\r\n    const newWord = getRandomWord();\r\n    setJumbledWord(jumbleWord(newWord.word));\r\n    setGuess('');\r\n    onLastWordContentChange(newWord.content);\r\n  };\r\n\r\n  const handleGuess = () => {\r\n    const normalizedGuess = guess.toUpperCase(); // Convert guess to uppercase\r\n\r\n    if (normalizedGuess === words[wordIndex].word) {\r\n      const newScore = score + 1;\r\n      setScore(newScore);\r\n      onScoreChange(newScore);\r\n      setWordIndex((prevIndex) => (prevIndex + 1) % words.length);\r\n      handleNewWord();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleNewWord();\r\n  }, [wordIndex]);\r\n\r\n  const storeScore = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/game/jumblescore', {  score: score  },{headers: {\r\n        'auth-token': authToken,\r\n        'Content-Type': 'application/json', \r\n      }});\r\n      console.log('Score saved to the server.');\r\n    } \r\n    catch (error) {\r\n      console.error('Error saving data to server:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"word-jumble\">\r\n      <h1>WORD JUMBLE GAME</h1>\r\n      <p>{words[wordIndex].content}</p>\r\n      <div className=\"jumbled-word\">{jumbledWord}</div>\r\n      <div>\r\n        <input\r\n          className='word-jumble-inp'\r\n          type=\"text\"\r\n          placeholder=\"Your guess\"\r\n          value={guess}\r\n          onChange={(e) => setGuess(e.target.value)}\r\n        />\r\n      </div>\r\n      <br />\r\n      <button className='jword-but' onClick={handleGuess}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Scoreboard = ({ score, lastWordContent }) => {\r\n  return (\r\n    <div className=\"jword-score\" >\r\n      <h1 className='jword-h1'>Scoreboard</h1>\r\n      <p className='jword-p'>Current Score: {score}</p>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [score, setScore] = useState(0);\r\n  const [lastWordContent, setLastWordContent] = useState('');\r\n\r\n  const handleScoreChange = (newScore) => {\r\n    setScore(newScore);\r\n  };\r\n\r\n  const handleLastWordContentChange = (content) => {\r\n    setLastWordContent(content);\r\n  };\r\n\r\n  return (\r\n    <div className='j-word'  style={{ backgroundImage: `url(\"ag2images/homepic2.jpg\")`  }}>\r\n    <div className=\"jword\">\r\n      <WordJumble\r\n        onScoreChange={handleScoreChange}\r\n        onLastWordContentChange={handleLastWordContentChange}\r\n      />\r\n      <br />\r\n      <Scoreboard score={score} lastWordContent={lastWordContent} />\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}