{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salon\\\\OneDrive\\\\Documents\\\\sashakt\\\\src\\\\watchvid\\\\vidplay\\\\Video1W.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./play.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watch = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video1\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      className: \"vid-iframe\",\n      width: \"900\",\n      height: \"450\",\n      src: \"https://www.youtube.com/embed/HCYLdtug8sk\" // Use the embed URL\n      ,\n      title: \"YouTube video player\"\n      // frameBorder=\"0\"\n      ,\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"vid-ul\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/watchQuiz1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"vid-start-button\",\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Watch;\nexport default Watch;\n\n// import React, { useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import './play.css';\n\n// const Watch = () => {\n//   useEffect(() => {\n//     const iframe = document.querySelector('.vid-iframe');\n\n//     // Listen for the 'onStateChange' event to detect when the video ends\n//     const onPlayerStateChange = (event) => {\n//       if (event.data === window.YT.PlayerState.ENDED) {\n//         // Video has ended, you can trigger the display of the quiz or redirect to the quiz page\n//         console.log('Video ended, display quiz or redirect to quiz page');\n//         // Example: Redirect to the quiz page\n//         window.location.href = '/watchQuiz1';\n//       }\n//     };\n\n//     // Initialize the YouTube Player API\n//     const player = new window.YT.Player(iframe, {\n//       events: {\n//         onStateChange: onPlayerStateChange,\n//       },\n//     });\n\n//     // Clean up the player when the component unmounts\n//     return () => {\n//       player.destroy();\n//     };\n//   }, []);\n\n//   return (\n//     <div className='video1'>\n//       <iframe\n//         className='vid-iframe'\n//         width=\"900\"\n//         height=\"450\"\n//         src=\"https://www.youtube.com/embed/HCYLdtug8sk\"\n//         title=\"YouTube video player\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n//         allowFullScreen\n//       ></iframe>\n//     </div>\n//   );\n// };\n\n// export default Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Watch","className","children","width","height","src","title","allow","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/salon/OneDrive/Documents/sashakt/src/watchvid/vidplay/Video1W.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./play.css\"\r\n\r\nconst Watch = () => {\r\n  return (\r\n    <div className='video1'>\r\n      <iframe\r\n        className='vid-iframe'\r\n        width=\"900\"\r\n        height=\"450\"\r\n        src=\"https://www.youtube.com/embed/HCYLdtug8sk\"  // Use the embed URL\r\n        title=\"YouTube video player\"\r\n        // frameBorder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n        allowFullScreen\r\n      ></iframe>\r\n      <ul className='vid-ul'>\r\n        <Link to=\"/watchQuiz1\">\r\n          <button className=\"vid-start-button\">Start Quiz</button>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Watch;\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import './play.css';\r\n\r\n// const Watch = () => {\r\n//   useEffect(() => {\r\n//     const iframe = document.querySelector('.vid-iframe');\r\n\r\n//     // Listen for the 'onStateChange' event to detect when the video ends\r\n//     const onPlayerStateChange = (event) => {\r\n//       if (event.data === window.YT.PlayerState.ENDED) {\r\n//         // Video has ended, you can trigger the display of the quiz or redirect to the quiz page\r\n//         console.log('Video ended, display quiz or redirect to quiz page');\r\n//         // Example: Redirect to the quiz page\r\n//         window.location.href = '/watchQuiz1';\r\n//       }\r\n//     };\r\n\r\n//     // Initialize the YouTube Player API\r\n//     const player = new window.YT.Player(iframe, {\r\n//       events: {\r\n//         onStateChange: onPlayerStateChange,\r\n//       },\r\n//     });\r\n\r\n//     // Clean up the player when the component unmounts\r\n//     return () => {\r\n//       player.destroy();\r\n//     };\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className='video1'>\r\n//       <iframe\r\n//         className='vid-iframe'\r\n//         width=\"900\"\r\n//         height=\"450\"\r\n//         src=\"https://www.youtube.com/embed/HCYLdtug8sk\"\r\n//         title=\"YouTube video player\"\r\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n//         allowFullScreen\r\n//       ></iframe>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Watch;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,oBACED,OAAA;IAAKE,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBH,OAAA;MACEE,SAAS,EAAC,YAAY;MACtBE,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZC,GAAG,EAAC,2CAA2C,CAAE;MAAA;MACjDC,KAAK,EAAC;MACN;MAAA;MACAC,KAAK,EAAC,qGAAqG;MAC3GC,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACVb,OAAA;MAAIE,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACpBH,OAAA,CAACF,IAAI;QAACgB,EAAE,EAAC,aAAa;QAAAX,QAAA,eACpBH,OAAA;UAAQE,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAE,EAAA,GApBKd,KAAK;AAsBX,eAAeA,KAAK;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}