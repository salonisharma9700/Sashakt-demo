{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salon\\\\OneDrive\\\\Documents\\\\sashakt\\\\src\\\\watchvid\\\\vidplay\\\\Video1W.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import \"./play.css\"\n\n// const Watch = () => {\n//   return (\n//     <div className='video1'>\n//       <iframe\n//         className='vid-iframe'\n//         width=\"900\"\n//         height=\"450\"\n//         src=\"https://www.youtube.com/embed/HCYLdtug8sk\"  // Use the embed URL\n//         title=\"YouTube video player\"\n//         // frameBorder=\"0\"\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n//         allowFullScreen\n//       ></iframe>\n//       <ul className='vid-ul'>\n//         <Link to=\"/watchQuiz1\">\n//           <button className=\"vid-start-button\">Start Quiz</button>\n//         </Link>\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default Watch;\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './play.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watch = () => {\n  _s();\n  useEffect(() => {\n    const iframe = document.querySelector('.vid-iframe');\n\n    // Listen for the 'onStateChange' event to detect when the video ends\n    const onPlayerStateChange = event => {\n      if (event.data === window.YT.PlayerState.ENDED) {\n        // Video has ended, you can trigger the display of the quiz or redirect to the quiz page\n        console.log('Video ended, display quiz or redirect to quiz page');\n        // Example: Redirect to the quiz page\n        window.location.href = '/watchQuiz1';\n      }\n    };\n\n    // Initialize the YouTube Player API\n    const player = new window.YT.Player(iframe, {\n      events: {\n        onStateChange: onPlayerStateChange\n      }\n    });\n\n    // Clean up the player when the component unmounts\n    return () => {\n      player.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video1\",\n    children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n      className: \"vid-iframe\",\n      width: \"900\",\n      height: \"450\",\n      src: \"https://www.youtube.com/embed/HCYLdtug8sk\",\n      title: \"YouTube video player\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Watch, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Watch;\nexport default Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useEffect","Link","jsxDEV","_jsxDEV","Watch","_s","iframe","document","querySelector","onPlayerStateChange","event","data","window","YT","PlayerState","ENDED","console","log","location","href","player","Player","events","onStateChange","destroy","className","children","width","height","src","title","allow","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/salon/OneDrive/Documents/sashakt/src/watchvid/vidplay/Video1W.js"],"sourcesContent":["// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import \"./play.css\"\r\n\r\n// const Watch = () => {\r\n//   return (\r\n//     <div className='video1'>\r\n//       <iframe\r\n//         className='vid-iframe'\r\n//         width=\"900\"\r\n//         height=\"450\"\r\n//         src=\"https://www.youtube.com/embed/HCYLdtug8sk\"  // Use the embed URL\r\n//         title=\"YouTube video player\"\r\n//         // frameBorder=\"0\"\r\n//         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n//         allowFullScreen\r\n//       ></iframe>\r\n//       <ul className='vid-ul'>\r\n//         <Link to=\"/watchQuiz1\">\r\n//           <button className=\"vid-start-button\">Start Quiz</button>\r\n//         </Link>\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Watch;\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './play.css';\r\n\r\nconst Watch = () => {\r\n  useEffect(() => {\r\n    const iframe = document.querySelector('.vid-iframe');\r\n\r\n    // Listen for the 'onStateChange' event to detect when the video ends\r\n    const onPlayerStateChange = (event) => {\r\n      if (event.data === window.YT.PlayerState.ENDED) {\r\n        // Video has ended, you can trigger the display of the quiz or redirect to the quiz page\r\n        console.log('Video ended, display quiz or redirect to quiz page');\r\n        // Example: Redirect to the quiz page\r\n        window.location.href = '/watchQuiz1';\r\n      }\r\n    };\r\n\r\n    // Initialize the YouTube Player API\r\n    const player = new window.YT.Player(iframe, {\r\n      events: {\r\n        onStateChange: onPlayerStateChange,\r\n      },\r\n    });\r\n\r\n    // Clean up the player when the component unmounts\r\n    return () => {\r\n      player.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className='video1'>\r\n      <iframe\r\n        className='vid-iframe'\r\n        width=\"900\"\r\n        height=\"450\"\r\n        src=\"https://www.youtube.com/embed/HCYLdtug8sk\"\r\n        title=\"YouTube video player\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n        allowFullScreen\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watch;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClBL,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;;IAEpD;IACA,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;MACrC,IAAIA,KAAK,CAACC,IAAI,KAAKC,MAAM,CAACC,EAAE,CAACC,WAAW,CAACC,KAAK,EAAE;QAC9C;QACAC,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;QACjE;QACAL,MAAM,CAACM,QAAQ,CAACC,IAAI,GAAG,aAAa;MACtC;IACF,CAAC;;IAED;IACA,MAAMC,MAAM,GAAG,IAAIR,MAAM,CAACC,EAAE,CAACQ,MAAM,CAACf,MAAM,EAAE;MAC1CgB,MAAM,EAAE;QACNC,aAAa,EAAEd;MACjB;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXW,MAAM,CAACI,OAAO,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA;IAAKsB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBvB,OAAA;MACEsB,SAAS,EAAC,YAAY;MACtBE,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZC,GAAG,EAAC,2CAA2C;MAC/CC,KAAK,EAAC,sBAAsB;MAC5BC,KAAK,EAAC,qGAAqG;MAC3GC,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAxCID,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}