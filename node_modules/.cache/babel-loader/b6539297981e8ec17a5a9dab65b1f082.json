{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salon\\\\OneDrive\\\\Documents\\\\sashakt\\\\src\\\\Bot\\\\ActionProvider.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionProvider = ({\n  createChatBotMessage,\n  setState,\n  children\n}) => {\n  const initialAction = () => {\n    const message = createChatBotMessage('Just type in your name to begin.');\n    updateState(message, \"age\");\n  };\n  const afterNameMessage = () => {\n    const message = createChatBotMessage(\"Let me know your age.\");\n    updateState(message, \"preference\");\n  };\n  const afterAgeMessage = () => {\n    const message = createChatBotMessage(\"What would you like to know about?\", {\n      widget: \"startSlow\"\n    });\n    updateState(message);\n  };\n\n  // const finalResult = (name, age, preference, vehicle) => {\n  //     const message = createChatBotMessage(`Got it, ${name}! Based on your age ${age}  , I recommend the '${vehicle}.' Child line India (1098)`, {\n  //         widget: \"finalImage\"\n  //     })\n  //     updateState(message)\n  // }\n  const finalResult = (name, age, preference, vehicle) => {\n    const message = createChatBotMessage(`Got it, ${name}! Based on your age ${age}  , I recommend the '${vehicle}.' Child line India (1098)`, {\n      widget: \"finalImage\"\n    });\n    updateState(message, \"finalImage\");\n  };\n  const updateState = (message, checker) => {\n    setState(prev => ({\n      ...prev,\n      messages: [...prev.messages, message],\n      checker\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        actions: {\n          initialAction,\n          afterNameMessage,\n          afterAgeMessage,\n          finalResult\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_c = ActionProvider;\nexport default ActionProvider;\nvar _c;\n$RefreshReg$(_c, \"ActionProvider\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ActionProvider","createChatBotMessage","setState","children","initialAction","message","updateState","afterNameMessage","afterAgeMessage","widget","finalResult","name","age","preference","vehicle","checker","prev","messages","Children","map","child","cloneElement","actions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/salon/OneDrive/Documents/sashakt/src/Bot/ActionProvider.js"],"sourcesContent":["import React from 'react';\n\nconst ActionProvider = ({ createChatBotMessage, setState, children }) => {\n\n    const initialAction = () => {\n        const message = createChatBotMessage('Just type in your name to begin.');\n        updateState(message, \"age\")\n    }\n\n    const afterNameMessage = () => {\n        const message = createChatBotMessage(\"Let me know your age.\")\n        updateState(message, \"preference\")\n    }\n\n    const afterAgeMessage = () => {\n        const message = createChatBotMessage(\"What would you like to know about?\", {\n            widget: \"startSlow\"\n        })\n        updateState(message)\n    }\n\n    // const finalResult = (name, age, preference, vehicle) => {\n    //     const message = createChatBotMessage(`Got it, ${name}! Based on your age ${age}  , I recommend the '${vehicle}.' Child line India (1098)`, {\n    //         widget: \"finalImage\"\n    //     })\n    //     updateState(message)\n    // }\n    const finalResult = (name, age, preference, vehicle) => {\n        const message = createChatBotMessage(`Got it, ${name}! Based on your age ${age}  , I recommend the '${vehicle}.' Child line India (1098)`, {\n            widget: \"finalImage\"\n        });\n        updateState(message, \"finalImage\"); \n    };\n    \n\n    const updateState = (message, checker) => {\n        setState((prev) => ({\n            ...prev,\n            messages: [...prev.messages, message],\n            checker,\n        }))\n    }\n\n    return (\n        <div>\n            {React.Children.map(children, (child) => {\n                return React.cloneElement(child, {\n                    actions: {\n                        initialAction,\n                        afterNameMessage,\n                        afterAgeMessage,\n                        finalResult\n                    },\n                });\n            })}\n        </div>\n    );\n};\n\nexport default ActionProvider;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAErE,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAGJ,oBAAoB,CAAC,kCAAkC,CAAC;IACxEK,WAAW,CAACD,OAAO,EAAE,KAAK,CAAC;EAC/B,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMF,OAAO,GAAGJ,oBAAoB,CAAC,uBAAuB,CAAC;IAC7DK,WAAW,CAACD,OAAO,EAAE,YAAY,CAAC;EACtC,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMH,OAAO,GAAGJ,oBAAoB,CAAC,oCAAoC,EAAE;MACvEQ,MAAM,EAAE;IACZ,CAAC,CAAC;IACFH,WAAW,CAACD,OAAO,CAAC;EACxB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA,MAAMK,WAAW,GAAGA,CAACC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,OAAO,KAAK;IACpD,MAAMT,OAAO,GAAGJ,oBAAoB,CAAE,WAAUU,IAAK,uBAAsBC,GAAI,wBAAuBE,OAAQ,4BAA2B,EAAE;MACvIL,MAAM,EAAE;IACZ,CAAC,CAAC;IACFH,WAAW,CAACD,OAAO,EAAE,YAAY,CAAC;EACtC,CAAC;EAGD,MAAMC,WAAW,GAAGA,CAACD,OAAO,EAAEU,OAAO,KAAK;IACtCb,QAAQ,CAAEc,IAAI,KAAM;MAChB,GAAGA,IAAI;MACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEZ,OAAO,CAAC;MACrCU;IACJ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACIhB,OAAA;IAAAI,QAAA,EACKN,KAAK,CAACqB,QAAQ,CAACC,GAAG,CAAChB,QAAQ,EAAGiB,KAAK,IAAK;MACrC,oBAAOvB,KAAK,CAACwB,YAAY,CAACD,KAAK,EAAE;QAC7BE,OAAO,EAAE;UACLlB,aAAa;UACbG,gBAAgB;UAChBC,eAAe;UACfE;QACJ;MACJ,CAAC,CAAC;IACN,CAAC;EAAC;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GAvDI3B,cAAc;AAyDpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}