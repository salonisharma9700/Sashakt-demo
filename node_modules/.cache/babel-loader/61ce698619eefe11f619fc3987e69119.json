{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salon\\\\OneDrive\\\\Documents\\\\sashakt\\\\src\\\\watchvid\\\\vidplay\\\\WQuiz3.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from \"react\";\n// //import './App.css'\n\n// function Quiz3() {\n\n//   const [showFinalResults, setFinalResults] = useState(false);\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n//   const [score, setScore] = useState(0);\n//   const question =[\n//     {\n//       text: \"What is mean by Good touch?\",\n//       options: [\n\n//        { id:0, text:\"Feeling comfortable\", isCorrect: true },\n//        { id:0, text:\"safe\", isCorrect: false },\n//        { id:0, text:\"don't feel good\", isCorrect: false },\n//        { id:0, text:\"uneasy\", isCorrect: false },\n//       ],\n//     },\n//     {\n//       text: \"What are bad touch?\",\n//       options: [\n\n//         { id:0, text:\"dont feel good\", isCorrect: true },\n//         { id:0, text:\"safe\", isCorrect: false },\n//         { id:0, text:\"comfortable\", isCorrect: false },\n//         { id:0, text:\"uneasy\", isCorrect: false },\n//       ],\n//     },\n//     {\n//       text:   \"what are private parts?\",\n//       options: [\n\n//        { id:0, text:\"chest\", isCorrect: false },\n//        { id:0, text:\"under legs\", isCorrect: false },\n//        { id:0, text:\"a and b\", isCorrect: true },\n//        { id:0, text:\"hands\", isCorrect: false },\n//       ],\n//     },\n//     {\n//       text: \"What sings for bad touch?\",\n//       options: [\n\n//        { id:0, text:\"happy\", isCorrect: false },\n//        { id:0, text:\"joyful\", isCorrect: false },\n//        { id:0, text:\"excited\", isCorrect: false },\n//        { id:0, text:\"affraid\", isCorrect: true },\n//       ],\n//     },\n//     {\n//       text: \"what is the good touch gives?\",\n//       options: [\n\n//        { id:0, text:\"bad\", isCorrect: false },\n//        { id:0, text:\"feel happy\", isCorrect: true },\n//        { id:0, text:\"angry\", isCorrect: false },\n//        { id:0, text:\"embrassing\", isCorrect: false },\n//       ],\n//     },\n//   ];\n//   const optionClicked = (isCorrect) => {\n//     if( isCorrect) {\n//       setScore(score + 1);\n//     }\n//     if (currentQuestion + 1 < question.length) {\n//       setCurrentQuestion(currentQuestion + 1);\n//     } else {\n//       setFinalResults(true);\n//     }\n//   }\n//   const restartGame = () => {\n//     setScore(0);\n//     setCurrentQuestion(0);\n//     setFinalResults(false);\n//   }\n//   return (\n//     <div className=\"vid-App\">\n//       <h1>Good touch and bad touch</h1>\n\n//       {showFinalResults ? (\n//         <div className=\"vid-final-result\">\n//         <h1>Final result</h1>\n//         <h2>{score} out of {question.length} correct - ({(score/question.length) * 100}%)</h2>\n//         <button onClick={() => restartGame()}>Restart Game</button>\n//       </div>\n//       ) : (\n//       <div className='vid-questions-card'>\n//         <h2>Question {currentQuestion + 1} out of {question.length}</h2>\n//         <h3 className=\"vid-question-text\">{question[currentQuestion].text}</h3>\n\n//         <ul>\n//           {question[currentQuestion].options.map((options) => {\n//             return (\n//               <li onClick={() => optionClicked(options.isCorrect)} key={options.id}>{options.text}</li>\n//             );\n//           })}\n//         </ul>\n\n//       </div>\n//       )}\n\n//     </div>\n//   );\n// }\n\n// export default Quiz3;\n\nimport React, { useState } from \"react\";\n//import './App.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz3() {\n  _s();\n  const [showFinalResults, setFinalResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const question = [{\n    text: \"What is mean by Good touch?\",\n    options: [{\n      id: 0,\n      text: \"Feeling comfortable\",\n      isCorrect: true\n    }, {\n      id: 0,\n      text: \"safe\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"don't feel good\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"uneasy\",\n      isCorrect: false\n    }]\n  }, {\n    text: \"What are bad touch?\",\n    options: [{\n      id: 0,\n      text: \"dont feel good\",\n      isCorrect: true\n    }, {\n      id: 0,\n      text: \"safe\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"comfortable\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"uneasy\",\n      isCorrect: false\n    }]\n  }, {\n    text: \"what are private parts?\",\n    options: [{\n      id: 0,\n      text: \"chest\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"under legs\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"a and b\",\n      isCorrect: true\n    }, {\n      id: 0,\n      text: \"hands\",\n      isCorrect: false\n    }]\n  }, {\n    text: \"What sings for bad touch?\",\n    options: [{\n      id: 0,\n      text: \"happy\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"joyful\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"excited\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"affraid\",\n      isCorrect: true\n    }]\n  }, {\n    text: \"what is the good touch gives?\",\n    options: [{\n      id: 0,\n      text: \"bad\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"feel happy\",\n      isCorrect: true\n    }, {\n      id: 0,\n      text: \"angry\",\n      isCorrect: false\n    }, {\n      id: 0,\n      text: \"embrassing\",\n      isCorrect: false\n    }]\n  }];\n  const optionClicked = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    if (currentQuestion + 1 < question.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setFinalResults(true);\n    }\n  };\n  const restartGame = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setFinalResults(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vid-App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Good touch and bad touch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), showFinalResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vid-final-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Final result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [score, \" out of \", question.length, \" correct - (\", score / question.length * 100, \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => restartGame(),\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vid-questions-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question \", currentQuestion + 1, \" out of \", question.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"vid-question-text\",\n        children: question[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question[currentQuestion].options.map(options => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => optionClicked(options.isCorrect),\n            children: options.text\n          }, options.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz3, \"tsqe9ykbJuVNAmHylU17G1wTD90=\");\n_c = Quiz3;\nexport default Quiz3;\nvar _c;\n$RefreshReg$(_c, \"Quiz3\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz3","_s","showFinalResults","setFinalResults","currentQuestion","setCurrentQuestion","score","setScore","question","text","options","id","isCorrect","optionClicked","length","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/salon/OneDrive/Documents/sashakt/src/watchvid/vidplay/WQuiz3.js"],"sourcesContent":["// import React, {useState} from \"react\";\r\n// //import './App.css'\r\n\r\n// function Quiz3() {\r\n\r\n//   const [showFinalResults, setFinalResults] = useState(false);\r\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\r\n//   const [score, setScore] = useState(0);\r\n//   const question =[\r\n//     {\r\n//       text: \"What is mean by Good touch?\",\r\n//       options: [\r\n        \r\n//        { id:0, text:\"Feeling comfortable\", isCorrect: true },\r\n//        { id:0, text:\"safe\", isCorrect: false },\r\n//        { id:0, text:\"don't feel good\", isCorrect: false },\r\n//        { id:0, text:\"uneasy\", isCorrect: false },\r\n//       ],\r\n//     },\r\n//     {\r\n//       text: \"What are bad touch?\",\r\n//       options: [\r\n        \r\n//         { id:0, text:\"dont feel good\", isCorrect: true },\r\n//         { id:0, text:\"safe\", isCorrect: false },\r\n//         { id:0, text:\"comfortable\", isCorrect: false },\r\n//         { id:0, text:\"uneasy\", isCorrect: false },\r\n//       ],\r\n//     },\r\n//     {\r\n//       text:   \"what are private parts?\",\r\n//       options: [\r\n        \r\n//        { id:0, text:\"chest\", isCorrect: false },\r\n//        { id:0, text:\"under legs\", isCorrect: false },\r\n//        { id:0, text:\"a and b\", isCorrect: true },\r\n//        { id:0, text:\"hands\", isCorrect: false },\r\n//       ],\r\n//     },\r\n//     {\r\n//       text: \"What sings for bad touch?\",\r\n//       options: [\r\n        \r\n//        { id:0, text:\"happy\", isCorrect: false },\r\n//        { id:0, text:\"joyful\", isCorrect: false },\r\n//        { id:0, text:\"excited\", isCorrect: false },\r\n//        { id:0, text:\"affraid\", isCorrect: true },\r\n//       ],\r\n//     },\r\n//     {\r\n//       text: \"what is the good touch gives?\",\r\n//       options: [\r\n        \r\n//        { id:0, text:\"bad\", isCorrect: false },\r\n//        { id:0, text:\"feel happy\", isCorrect: true },\r\n//        { id:0, text:\"angry\", isCorrect: false },\r\n//        { id:0, text:\"embrassing\", isCorrect: false },\r\n//       ],\r\n//     },\r\n//   ];\r\n//   const optionClicked = (isCorrect) => {\r\n//     if( isCorrect) {\r\n//       setScore(score + 1);\r\n//     }\r\n//     if (currentQuestion + 1 < question.length) {\r\n//       setCurrentQuestion(currentQuestion + 1);\r\n//     } else {\r\n//       setFinalResults(true);\r\n//     }\r\n//   }\r\n//   const restartGame = () => {\r\n//     setScore(0);\r\n//     setCurrentQuestion(0);\r\n//     setFinalResults(false);\r\n//   }\r\n//   return (\r\n//     <div className=\"vid-App\">\r\n//       <h1>Good touch and bad touch</h1>\r\n  \r\n\r\n\r\n//       {showFinalResults ? (\r\n//         <div className=\"vid-final-result\">\r\n//         <h1>Final result</h1>\r\n//         <h2>{score} out of {question.length} correct - ({(score/question.length) * 100}%)</h2>\r\n//         <button onClick={() => restartGame()}>Restart Game</button>\r\n//       </div>\r\n//       ) : (\r\n//       <div className='vid-questions-card'>\r\n//         <h2>Question {currentQuestion + 1} out of {question.length}</h2>\r\n//         <h3 className=\"vid-question-text\">{question[currentQuestion].text}</h3>\r\n        \r\n\r\n//         <ul>\r\n//           {question[currentQuestion].options.map((options) => {\r\n//             return (\r\n//               <li onClick={() => optionClicked(options.isCorrect)} key={options.id}>{options.text}</li>\r\n//             );\r\n//           })}\r\n//         </ul>\r\n\r\n//       </div>\r\n//       )}\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Quiz3;\r\n\r\nimport React, {useState} from \"react\";\r\n//import './App.css'\r\n\r\nfunction Quiz3() {\r\n\r\n  const [showFinalResults, setFinalResults] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const question =[\r\n    {\r\n      text: \"What is mean by Good touch?\",\r\n      options: [\r\n        \r\n       { id:0, text:\"Feeling comfortable\", isCorrect: true },\r\n       { id:0, text:\"safe\", isCorrect: false },\r\n       { id:0, text:\"don't feel good\", isCorrect: false },\r\n       { id:0, text:\"uneasy\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      text: \"What are bad touch?\",\r\n      options: [\r\n        \r\n        { id:0, text:\"dont feel good\", isCorrect: true },\r\n        { id:0, text:\"safe\", isCorrect: false },\r\n        { id:0, text:\"comfortable\", isCorrect: false },\r\n        { id:0, text:\"uneasy\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      text:   \"what are private parts?\",\r\n      options: [\r\n        \r\n       { id:0, text:\"chest\", isCorrect: false },\r\n       { id:0, text:\"under legs\", isCorrect: false },\r\n       { id:0, text:\"a and b\", isCorrect: true },\r\n       { id:0, text:\"hands\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      text: \"What sings for bad touch?\",\r\n      options: [\r\n        \r\n       { id:0, text:\"happy\", isCorrect: false },\r\n       { id:0, text:\"joyful\", isCorrect: false },\r\n       { id:0, text:\"excited\", isCorrect: false },\r\n       { id:0, text:\"affraid\", isCorrect: true },\r\n      ],\r\n    },\r\n    {\r\n      text: \"what is the good touch gives?\",\r\n      options: [\r\n        \r\n       { id:0, text:\"bad\", isCorrect: false },\r\n       { id:0, text:\"feel happy\", isCorrect: true },\r\n       { id:0, text:\"angry\", isCorrect: false },\r\n       { id:0, text:\"embrassing\", isCorrect: false },\r\n      ],\r\n    },\r\n  ];\r\n  const optionClicked = (isCorrect) => {\r\n    if( isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    if (currentQuestion + 1 < question.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      setFinalResults(true);\r\n    }\r\n  }\r\n  const restartGame = () => {\r\n    setScore(0);\r\n    setCurrentQuestion(0);\r\n    setFinalResults(false);\r\n  }\r\n  return (\r\n    <div className=\"vid-App\">\r\n      <h1>Good touch and bad touch</h1>\r\n  \r\n\r\n\r\n      {showFinalResults ? (\r\n        <div className=\"vid-final-result\">\r\n        <h1>Final result</h1>\r\n        <h2>{score} out of {question.length} correct - ({(score/question.length) * 100}%)</h2>\r\n        <button onClick={() => restartGame()}>Restart Game</button>\r\n      </div>\r\n      ) : (\r\n      <div className='vid-questions-card'>\r\n        <h2>Question {currentQuestion + 1} out of {question.length}</h2>\r\n        <h3 className=\"vid-question-text\">{question[currentQuestion].text}</h3>\r\n        \r\n\r\n        <ul>\r\n          {question[currentQuestion].options.map((options) => {\r\n            return (\r\n              <li onClick={() => optionClicked(options.isCorrect)} key={options.id}>{options.text}</li>\r\n            );\r\n          })}\r\n        </ul>\r\n\r\n      </div>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz3;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}